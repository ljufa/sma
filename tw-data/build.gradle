plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.30'
    id 'com.google.protobuf' version '0.8.17'
    id 'idea'


}
ext {
    kotlinVersion = "1.5.30"
    coroutines_version = '1.5.2-native-mt'
    junitJupiterEngineVersion = '5.7.2'
    grpc_version = '1.40.1'
    protobuf_version = '3.17.3'
    logback_version = '1.2.5'
}

group = 'com.github.ljufa'
version = '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.21'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2'
    implementation 'com.h2database:h2:1.4.200'
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation 'org.apache.kafka:kafka-clients:2.8.0'
    implementation 'com.jayway.jsonpath:json-path:2.6.0'
    implementation 'com.sksamuel.hoplite:hoplite-core:1.4.7'
    implementation 'com.sksamuel.hoplite:hoplite-yaml:1.4.7'

    implementation 'org.lmdbjava:lmdbjava:0.8.1'
    implementation 'com.github.jnr:jnr-ffi:2.2.5'

    // Grpc and Protobuf
    implementation 'io.grpc:grpc-kotlin-stub:1.1.0'
    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
    implementation "com.google.protobuf:protobuf-java:${protobuf_version}"
    implementation "com.google.protobuf:protobuf-java-util:${protobuf_version}"
    implementation "io.grpc:grpc-netty-shaded:${grpc_version}"
    implementation "io.grpc:grpc-protobuf:${grpc_version}"
    implementation "io.grpc:grpc-stub:${grpc_version}"
    // Java
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

    // Google
    implementation 'com.google.guava:guava:30.1.1-jre'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
    testImplementation 'org.assertj:assertj-core:3.20.2'
    testImplementation("io.mockk:mockk:1.12.0")

    jar {
        manifest {
            attributes 'Implementation-Title': 'Gradle Jar File Example',
                    'Implementation-Version': '1.0',
                    'Main-Class': 'com.github.ljufa.sma.tw.server.MainKt'
        }
        exclude("**/application-local.yaml")
        archivesBaseName = "app"
        archiveVersion = ""
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        from {
            configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
        }
    }

}

protobuf {
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        // Specify protoc to generate using kotlin protobuf plugin
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.40.1"
        }
        // Specify protoc to generate using our grpc kotlin plugin
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:1.1.0:jdk7@jar"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                // Generate Java gRPC classes
                grpc {}
                // Generate Kotlin gRPC using the custom plugin from library
                grpckt {}
            }
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}
